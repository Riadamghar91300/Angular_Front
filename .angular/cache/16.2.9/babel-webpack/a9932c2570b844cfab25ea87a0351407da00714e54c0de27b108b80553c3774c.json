{"ast":null,"code":"import { TICKETS_MOCKED } from '../../mocks/tickets.mock';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class TicketService {\n  constructor() {\n    /**\n     * Services Documentation:\n     * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\n     */\n    this.ticketList = TICKETS_MOCKED;\n    /**\n     * Observable which contains the list of the tickets.\n     * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\n     */\n    this.tickets$ = new BehaviorSubject(this.ticketList);\n  }\n  addTicket(ticket) {\n    // You need here to update the list of ticket and then update our observable (Subject) with the new list\n    // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n    this.ticketList.push(ticket);\n    this.tickets$.next(this.ticketList);\n  }\n  archiveTicket(ticket) {\n    ticket.archived = true;\n    this.tickets$.next(this.ticketList);\n  }\n  static #_ = this.ɵfac = function TicketService_Factory(t) {\n    return new (t || TicketService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TicketService,\n    factory: TicketService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TICKETS_MOCKED","BehaviorSubject","TicketService","constructor","ticketList","tickets$","addTicket","ticket","push","next","archiveTicket","archived","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\riada\\Desktop\\riad AMGHAR\\M1 paris 8\\tiw\\tiw\\projet\\Projet MEKOUAR\\Angular_youssef-main\\Angular_youssef-main\\Angular_Front\\src\\services\\ticket\\ticket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Ticket } from '../../models/ticket';\nimport { TICKETS_MOCKED } from '../../mocks/tickets.mock';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketService {\n  /**\n   * Services Documentation:\n   * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\n   */\n  private ticketList: Ticket[] = TICKETS_MOCKED;\n  /**\n   * Observable which contains the list of the tickets.\n   * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\n   */\n  public tickets$: BehaviorSubject<Ticket[]> = new BehaviorSubject(this.ticketList);\n\n  constructor() {\n  }\n\n  addTicket(ticket: Ticket) {\n    // You need here to update the list of ticket and then update our observable (Subject) with the new list\n    // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n    this.ticketList.push(ticket);\n    this.tickets$.next(this.ticketList);\n  }\n\n  archiveTicket(ticket: Ticket) {\n    ticket.archived = true;\n    this.tickets$.next(this.ticketList);\n  }\n  // deleteTicket(ticket: Ticket): void {\n  //   this.ticketList = this.ticketList.filter(({ title }) => title !== title);\n  // }\n}\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,0BAA0B;AACzD,SAASC,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,aAAa;EAYxBC,YAAA;IAXA;;;;IAIQ,KAAAC,UAAU,GAAaJ,cAAc;IAC7C;;;;IAIO,KAAAK,QAAQ,GAA8B,IAAIJ,eAAe,CAAC,IAAI,CAACG,UAAU,CAAC;EAGjF;EAEAE,SAASA,CAACC,MAAc;IACtB;IACA;IACA,IAAI,CAACH,UAAU,CAACI,IAAI,CAACD,MAAM,CAAC;IAC5B,IAAI,CAACF,QAAQ,CAACI,IAAI,CAAC,IAAI,CAACL,UAAU,CAAC;EACrC;EAEAM,aAAaA,CAACH,MAAc;IAC1BA,MAAM,CAACI,QAAQ,GAAG,IAAI;IACtB,IAAI,CAACN,QAAQ,CAACI,IAAI,CAAC,IAAI,CAACL,UAAU,CAAC;EACrC;EAAC,QAAAQ,CAAA,G;qBAzBUV,aAAa;EAAA;EAAA,QAAAW,EAAA,G;WAAbX,aAAa;IAAAY,OAAA,EAAbZ,aAAa,CAAAa,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}